{"index.html": {"url": "index.html", "title": "介绍", "keywords": "", "body": "Oracle相关"}, "md/index.html": {"url": "md/index.html", "title": "Oracle 部署", "keywords": "", "body": "Oracle部署局域网内部环境使用非局域网内部环境请参考外网环境部署虚拟机还原到系统安装完毕快照1.部署本地yum源rm-rf/etc/yum.repos.d/*curl-o/etc/yum.repos.d/CentOS-7.repohttp://192.168.2.251/Centos/CentOS7.repoyumcleanallyummakecache2.安装必需的安装包yuminstall-ylibaiobcflexnet-tools3.安装Oraclerpm-ivhhttp://192.168.2.251/Centos/oracle/oracle-xe-11.2.0-1.0.x86_64.rpm4.配置OralceOracleApplicationExpress的有效HTTP端口（默认值为8080）Oracle数据库侦听器的有效端口（默认为1521）SYS和SYSTEM管理员帐户密码：123456确认SYS和SYSTEM管理员帐户的密码：123456数据库在计算机启动时自动启动（下次重新引导）echo-e&quot;\\n\\n123456\\n123456\\ny&quot;|/etc/init.d/oracle-xeconfigure5.环境变量配置cat&gt;&gt;.bash_profile&lt;&lt;EOF./u01/app/oracle/product/11.2.0/xe/bin/oracle_env.shEOF让环境变量生效su-6.允许远程访问Oracle11gXEGUI进入SQL命令窗口sqlplus&quot;sys/123456assysdba&quot;&lt;&lt;EOFEXECDBMS_XDB.SETLISTENERLOCALACCESS(FALSE);EOF7.直接关闭防火墙systemctlstopfirewalldsystemctldisablefirewalld可通下面网址访问确认安装成功http://&lt;server-ip&gt;:8080/apex/f?p=4950:1用户名：system密码：1234568.一键部署rm-rf/etc/yum.repos.d/*curl-o/etc/yum.repos.d/CentOS-7.repohttp://192.168.2.251/Centos/CentOS7.repoyumcleanallyummakecacheyuminstall-ylibaiobcflexnet-toolsrpm-ivhhttp://192.168.2.251/Centos/oracle/oracle-xe-11.2.0-1.0.x86_64.rpmecho-e&quot;\\n\\n123456\\n123456\\ny&quot;|/etc/init.d/oracle-xeconfigurecat&gt;&gt;.bash_profile&lt;&lt;EOF./u01/app/oracle/product/11.2.0/xe/bin/oracle_env.shEOFsu-sqlplus&quot;sys/123456assysdba&quot;&lt;&lt;EOFEXECDBMS_XDB.SETLISTENERLOCALACCESS(FALSE);EOFsystemctlstopfirewalldsystemctldisablefirewalld"}, "md/总结/语法总结.html": {"url": "md/总结/语法总结.html", "title": "Oracle 语法总结", "keywords": "", "body": "Oracle语法总结create\\(\\textcolor{#228B22}{create}\\begin{cases}\\textcolor{#228B22}{user}\\space用户名\\space\\textcolor{#228B22}{identified\\spaceby\\space}密码\\space[\\textcolor{#228B22}{account\\spacelock}|\\textcolor{#228B22}{unlock}];\\\\\\textcolor{#228B22}{table}\\space表名(列名\\space类型\\space[\\textcolor{#228B22}{null}|\\textcolor{#228B22}{not\\spacenull}]\\space[\\textcolor{#228B22}{constraint}]);\\\\[\\textcolor{#228B22}{or\\spacereplace}]\\space[\\textcolor{#228B22}{noforce}|\\textcolor{#228B22}{force}]\\space\\textcolor{#228B22}{view}\\space视图名\\space\\textcolor{#228B22}{as}\\spaceselect查询\\space[\\textcolor{#228B22}{with\\spaceread\\spaceonly}];\\\\[\\textcolor{#228B22}{unique}]\\space\\textcolor{#228B22}{index}\\space索引名\\space\\textcolor{#228B22}{on}\\space表名(列名\\space[,\\space列名…]);\\\\\\end{cases}\\)alter\\(\\textcolor{#228B22}{alter}\\begin{cases}\\textcolor{#228B22}{user}\\space用户名\\space{\\begin{cases}\\textcolor{#228B22}{identified\\spaceby}\\space新密码;\\\\\\textcolor{#228B22}{account\\spacelock}|\\textcolor{#228B22}{unlock};\\end{cases}}\\\\\\textcolor{#228B22}{table}\\space表名\\space{\\begin{cases}\\textcolor{#228B22}{add}\\space{\\begin{cases}列名\\space列类型\\space列约束;\\\\\\textcolor{#228B22}{constraint}\\space约束名\\space{\\begin{cases}\\textcolor{#228B22}{primary\\spacekey}(列);\\\\\\textcolor{#228B22}{foreign\\spacekey}(列)\\space\\textcolor{#228B22}{references}\\space参照表(参照列);\\\\\\textcolor{#228B22}{unique}(列);\\\\\\textcolor{#228B22}{check}(条件);\\\\\\end{cases}}\\end{cases}}\\\\\\textcolor{#228B22}{drop}\\space{\\begin{cases}\\textcolor{#228B22}{column}\\space列名;\\\\\\textcolor{#228B22}{constraint}\\space约束名;\\end{cases}}\\\\\\textcolor{#228B22}{modify}\\space列\\space{\\begin{cases}\\textcolor{#228B22}{not\\spacenull}|\\textcolor{#228B22}{null};\\\\\\textcolor{#228B22}{default}\\space默认值|\\textcolor{#228B22}{null};\\end{cases}}\\end{cases}}\\end{cases}\\)drop\\(\\textcolor{#228B22}{alter}\\begin{cases}\\textcolor{#228B22}{user}\\space用户名\\space[\\textcolor{#228B22}{cascade}];\\\\\\textcolor{#228B22}{table}\\space表名;\\\\\\textcolor{#228B22}{view}\\space视图名;\\\\\\textcolor{#228B22}{index}\\space索引名;\\\\\\end{cases}\\)语法结构：查询select[distinct]*|列|表达式fromAjoinB--内连接on表之间关联的条件rightjoinC--右外连接on表之间关联的条件leftjoinD--左外连接on表之间关联的条件fulljoinE--全连接on表之间关联的条件where结果筛选条件groupby分组列having分组后结果筛选orderby排序列[asc|desc];语法结构：创建用户createuser用户名identifiedby口令[accountlock|unlock];语法结构：修改用户的密码alteruser用户名identifiedby新密码;语法结构：修改用户处于锁定（非锁定）状态alteruser用户名accountlock|unlock;语法结构：删除用户dropuser用户名cascade;语法结构：授予权限grant角色|权限to用户|角色;语法结构：回收权限revoke角色|权限from用户|角色;语法结构：创建表createtable表名(列名1类型[null|notnull][constraint],类名2类型);语法结构：修改表名rename原表名to新表名;语法结构：添加列altertable表名add列名列类型列约束;语法结构：删除列altertable表名dropcolumn列名;语法结构：删除表droptable表名;语法结构：添加约束altertable表名addconstraint约束名约束内容;语法结构：删除约束altertable表名dropconstraint约束名;语法结构：：数据插入insertinto表名(列名1，列名2……)VALUES(值1，值2……)语法结构：：更新数据update表名set列名1=值,列名2=值where条件;语法结构：：删除数据deletefrom表名where条件;语法结构：：删除全部数据！！无法回滚，高危！truncatetable表名;"}, "md/概念.html": {"url": "md/概念.html", "title": "Oracle 概念", "keywords": "", "body": "Oracle概念"}, "md/数据库中的相关术语.html": {"url": "md/数据库中的相关术语.html", "title": "数据库中的相关术语", "keywords": "", "body": "数据库中的相关术语在Oracle数据库中每个数据库里面都包含很多对象，主要包括表、视图、存储过程、触发器以及约束。在这儿只简单介绍一下每一个术语的含义，在后面会详细地讲解这些术语的使用。1.表表，即在数据库中存放数据用的数据表。每一个数据库中都可以包含多张数据表，但是每一个数据表的名字都是不能重复的。表的一行代表一条记录，每一列都有一个列名，列名是唯一的，行与列的交叉点称为字段。例如，创建一个存放图书信息的表，表中信息包括图书编号、图书名称、图书作者、图书出版社、图书价格、备注。图书编号图书名称图书作者图书出版社图书价格备注0001Oracle10g刘一XX出版社200002Oracle11g王五XX出版社30在表中，第一行是表中每一列的列名，后两行每一行都是表中的一条记录。2.视图视图是数据库中的虚拟表。在视图中存放的是从数据库表中查询出来的记录，使用视图主要是为了方便信息查询，同时也能够缩短查询数据的时间。3.存储过程存储过程是由SQL语句和控制流语句组成的语句块。存储过程存储在数据库内，可由应用程序通过存储过程的名称调用执行。存储过程在开发软件时，可以把大量的数据操作放在服务器端的存储过程中，而只返回需要的数据，这样就减少了数据的传输量，速度也可以大大地提高。4.触发器触发器是特殊的存储过程，也是由SQL语句和程序控制语句组成的。但是，触发器在数据库中是不需调用而自动执行的。例如，在触发器中可以定义在修改某张表记录后执行触发器中的内容。5.约束约束是在数据库中保证数据库里表中数据完整性的手段。在Oracle中使用的约束有主键约束、外键约束、唯一约束、检查约束、非空约束、默认约束6个，其中主键约束和唯一约束都被认为是唯一约束，而外键约束被认为是参照约束。主键（PrimaryKey）约束主键约束在每个数据表中只能有一个，但是一个主键约束可以由多个列组成，通常把由多个列组成的主键又叫做复合主键或组合主键。主键约束可以保证主键列的数据没有重复值且值不为空，也可以说是唯一地标识表中的一条记录。外键（ForeignKey）约束外键约束之所以被认为是参照约束，是因为它主要用作把一个表中的数据和另一个表中的数据进行关联，表和表之间的关联是为了保证数据库中数据的完整性，使用外键保证数据的完整性，也叫参照完整性。下面就创建商品信息表和商品类型信息表，并建立两个表之间的外键约束。在商品信息表中“商品编号”是主键，而在商品类型信息表中“类型编号”是主键，当把商品信息表中的“商品编号”与商品类型信息表中的“类型编号”设置为外键约束后，在商品信息表中的类型信息就可以用商品类型信息表中的类型编号代替。设置完外键约束后，商品信息表中类型字段值必须是在商品类型信息表中存在的，同时当在商品类型信息表中删除一个类型时，如果商品信息表已经使用过该类型，那么商品类型信息表中的数据就无法被删除。这样就保证了数据库中数据的完整性。唯一（unique）约束唯一约束和主键约束一样都是设置表中的列不能重复的约束，区别就是一个表中只能有一个主键约束，而却可以有多个唯一约束。通常情况下设置唯一约束的目的就是使非主键列没有重复值。唯一约束与主键约束的另一个区别是如果数据表中的某一列中有空值，那么就不能把这个列设置为主键列，而可以设置成唯一约束。例如，在商品信息表中把商品编号设置成了主键，但是还要保证商品的名称不重名时，就可以把商品名称设置为唯一约束。检查（check）约束检查约束是用来指定表中列的值的取值范围的。例如，在员工信息表中员工年龄的列，如果要使员工年龄列的值为18～50，就可以使用检查约束进行设置，当输入的值不在有效范围内时，就会出现错误。这样就保证了数据库中数据的有效性。非空（notnull）约束非空约束是用来约束表中的列不允许为空的。例如，在员工信息表中员工身份证号码列，要求员工必须输入时，可以使用非空约束来保证该列不能为空。默认（default）约束插入数据没有赋值时，给一个默认值。6.事务我们可以把事务理解成一组SQL语句的集合。事务可以只包含一条SQL语句，也可以包含多条复杂的SQL语句，事务中的所有SQL语句被当做一个操作单元，换句话说，事务中的SQL语句要么都执行成功，要么全部执行失败，事务内的SQL语句被当做一个整体，被当做一个原子进行操作。6.1.事务的ACID特性事务有4个特性，它们分别是原子性、一致性、隔离性、持久性。原子性(atomicity)整个事务中的所有操作要么全部执行成功，要么全部执行失败后回滚到最初状态。事务的原子性是指，事务中程序是数据库的逻辑工作单位，它对数据的修改要么全部执行，要么完全不执行。原子也意味着不可分割，不管有多少程序，只要在同一个事务中，那么它们就是一个整体，如果都执行成功才意味着该事务成功，而有一个操作失败，那么同一个事务中的其他操作即使执行成功也没有用，事务会使其全部撤销。一致性(consistency)数据库总是从一个一致性状态转为另一个一致性状态。事务的一致性指事务执行的前后数据库都必须处于一致性状态，它是相对脏读而言的。只有在事务完成后才能被所有使用者看见，保证了数据的完整性。例如在银行转账时，从A账户取款但没有放到B账户中时数据是不一致的，同时也是不完整的，其他使用者此时不能看到A中修改后的数据，只有存到B账户中，交易完成并提交事务，这时才算数据一致，所有用户也会看到修改后的数据。隔离性(isolation)一个事务在提交之前所做出的的操作是否能为其他事务可见，由于不同的场景需求不同，所以针对隔离性来说，有不同的隔离级别。隔离性是指并发事务之间不能相互的干扰。也就是说，一个事务操作的数据不会被其他事务看到和操作。持久性(durability)事务一旦提交，事务所做出的修改将会永久保存，此时即使数据库崩溃，修改的数据也不会丢失。事务的提交很重要，但不建议频繁地提交事务，因为每次提交事务都需要时间，如果1W行记录，每行记录都提交事务，那么事务本身将是性能的主要消耗者。所以，适当地减少事务提交次数比较重要。例如，可以每1K行提交一次。"}, "md/范式.html": {"url": "md/范式.html", "title": "范式", "keywords": "", "body": "范式—设计关系型数据库的准则关系型数据库是目前流行和使用广泛的数据库，关系型数据库的设计标准就是数据库的范式，范式分别有第一范式、第二范式、第三范式。1.　第一范式—关系型数据库设计的第一步目前，只要是使用关系型数据库来设计数据库，都能够满足数据库设计的第一范式。第一范式（1NF）就是数据库表中的字段都是单一属性的，不可再分。这个单一属性可以是数据库中任何一种基本数据类型，如整型、字符型、日期型等。只要是关系型数据库都会满足第一范式。例如，一个产品信息表(product)，描述产品信息的字段有产品编号、产品名称、产品数量、产品价格、产品描述，如表3.4所示，那么这个产品信息表就满足第一范式的要求：每一个字段都是不可再分的单一属性。2.　第二范式—关系型数据库设计的第二步第二范式是在第一范式的基础上进一步对关系型数据库进行规范，官方给出第二范式的定义是要求在数据库表中不存在非关键字段对任一候选关键字段的部分函数依赖。意思就是说在第二范式中组合主键（AB）里面的A或者B与其他字段不能存在组合重复。为解决这个问题，通常的做法是不用组合主键，添加一个编号列，作为单一主键即可满足第二范式。如果不想添加编号列，就满足组合主键（AB）里面的A或者B与其他字段不能存在组合重复。例如，设计一个购物信息表，字段包括客户编号、产品名称、产品数量、产品类型、产品价格、客户类型。如果用客户编号和产品名称作为组合主键，那么在组合主键中产品名称和产品类型存在一定关系，是由产品名称决定产品的类型，所以不符合第二范式的要求，如果不按照第二范式的要求设计表，就会出现以下4个问题：数据冗余同一个产品由n个顾客购买，“产品类型”就重复n-1次；同一个顾客购买了多件产品，那么就会多次记录顾客的个人信息。更新异常若调整了某个产品的类型，数据表中所有行的“产品类型”值都要更新，否则会出现同一个产品不同类型的情况。插入异常假设新进了一个产品，暂时还没有人购买。这样，由于没有人购买，产品的名称和类型也无法记录到数据库中。删除异常假设一批顾客把已经购买完的商品退货，这些产品信息就从数据表中删除了。但是，与此同时，产品名称和产品类型等信息也被删除了。这样就导致了删除异常。为了消除数据冗余、更新异常、插入异常和删除异常，可以把现有的一个表拆分成3张表：第1张表是产品类型表，表中有产品类型、产品名称。第2张表是客户信息表，表中有客户编号、客户类型。第3张表是产品信息表，表中有产品名称、产品类型、产品价格、产品数量。3.　第三范式—关系型数据库设计的第三步第三范式是在第二范式的基础上对数据库设计进行规范，第三范式的要求是数据表中不存在非关键字段对任一候选关键字段的传递函数依赖。所谓传递函数依赖，指的是如果存在A决定B、B决定C的决定关系，则C传递函数依赖于A。因此，满足第三范式的数据库表应该不存在依赖关系，假定员工信息表为employee（员工编号，姓名，年龄，所在部门，部门电话），使用员工编号作为员工信息的主键，那么就存在决定关系：员工编号就决定了姓名、年龄、所在部门、部门电话这些字段。从上面的关系可以看出，在表中有一个主键，数据表的设计符合第二范式的要求。但是它不符合第三范式的要求，因为存在决定关系：员工编号就决定了所在部门，所在部门又决定了所在部门的电话，那么就存在了传递函数依赖关系，即员工编号决定部门电话，那么也会出现不满足第二范式时的数据冗余和更新、插入、删除异常的情况。为了满足第三范式的要求，必须把员工信息表拆分成如下两个数据表：员工表：员工编号、姓名、年龄、所在部门；部门表：部门名称、部门电话。除了上面的三种范式以外，还有一种范式经常使用，即鲍依斯-科得范式（BCNF）。它建立在第三范式的基础上，如果数据库表中不存在任何字段对任一候选关键字段的传递函数依赖，那么就符合BCNF范式。"}, "md/E-R图.html": {"url": "md/E-R图.html", "title": "E-R图", "keywords": "", "body": "E-R图E-R（Entity-Relationship）图又叫实体-联系图，是描述现实世界的概念模型。构成E-R图的基本要素是实体、属性和联系。下面就来详细地讲解如何绘制E-R图。1.绘制E-R图的基本要素在E-R图中涉及的基本要素有实体、联系以及属性，下面就对这3个要素进行详细说明。1.1.实体（Entity）实体是客观存在并可以相互区别的事物。实体既可以是人、物，也可以是抽象的概念。例如，一个学生、一个老师、一个产品都可以认为是实体。相同类型的实体可以构成一个实体集。例如，全体学生就是一个实体集。在E-R图中实体一般用矩形表示，矩形框内写明实体的名称。例如，写一个老师的实体，如图所示。1.2.属性（Attribute）属性是实体所具有的某一特性，一个实体可由若干个属性来刻画。在E-R图中一般用椭圆形表示，并用无向边将其与相应的实体连接起来。例如，产品的名称、价格、类型等都是属性。例如，给老师实体加上属性：姓名、年龄、所教专业、所属院系，如图所示。1.3.联系（Relationship）联系，即在信息世界中反映实体内部或实体之间的联系。实体内部的联系通常是指组成实体的各属性之间的联系；实体之间的联系通常是指不同实体集之间的联系。在E-R图中用菱形表示，菱形框内写明联系名，并用无向边分别与有关实体连接起来，同时在无向边旁标上联系的类型。实体之间存在着3种联系类型，分别是一对一、一对多、多对多，它们反映到E-R图中即为相应的联系类型，即1:1、1:n和m:n。一对一关系（1:1）一对一关系是指实体集A与实体集B，A中的每一个实体至多与B实体集中一个实体有联系；反之，在实体集B中的每个实体至多与实体集A中一个实体有联系。例如，给学生排座，“学生”实体和“座位”实体之间的关系，每一个学生最多可以分得一个座位，同时每一个座位最多只能有一个学生来坐。用图形表示如图所示。一对多关系（1:n）一对多关系是指实体集A与实体集B中至少有n（n＞0）个实体有联系，并且实体集B中每一个实体至多与实体集A中一个实体有联系。例如，“学生”实体和“班级”实体之间的关系，一个班级里面可以有若干个学生，而每一个学生都属于这个班级。用图形表示如图所示。多对多关系（m:n）多对多关系是指实体集A中的每一个实体与实体集B中至少m（m＞0）个实体有联系，并且实体集B中的每一个实体与实体集A中的至少n（n＞0）个实体有联系。例如，顾客在商场购买商品，顾客与商品之间就是多对多的关系，每一个顾客都可以购买多种商品，而每一种商品又可以被多个顾客购买。用图形表示如图所示。其实，实体之间的这3种关系，不仅对两个实体有效，也可以表示多个实体之间的关系。2.E-R图绘制实例绘制一个网上购物系统的E-R图，在网上购物系统中简单分析出顾客、商品、商品类型、订单4个实体。下面分别绘制每个实体属性图并在最后绘制一个整体的E-R图。顾客实体属性图顾客实体主要包括用户编号、姓名、年龄、性别、身份证号、联系方式、送货地址、银行卡卡号8个属性，实体属性图如图所示。商品实体属性图商品实体主要包括商品编号、商品名称、商品价格、商品数量、商品描述5个属性，实体属性图如图所示。商品类型实体属性图商品类型实体主要包括商品类型编号和商品类型两个属性，实体属性图如图所示。订单实体属性图订单实体主要包括订单编号、送货地址、顾客姓名、是否付款、联系方式、所购商品6个属性，实体属性图如图所示。网上购物系统E-R图在绘制整体的E-R图之前，先要了解一下网上购物系统的购物流程。首先由顾客选择要购买的商品，之后把购买商品的列表生成一个订单，然后网站的售后人员会根据订单的地址送货，在这个网上购物系统里要求一个顾客每次只能生成一个订单。那么，这4个实体之间是什么关系呢？首先商品和顾客之间的关系是多对多的关系，多个商品可以被一个顾客购买，同时多个顾客也可以购买相同的商品；订单和商品之间的关系是一对多的关系，一个订单是由多个商品组成的，多个商品组成一个订单；顾客和订单之间的关系是一对一的关系，一个顾客可以生成一个订单，一个订单只能属于一个顾客；商品和商品类型之间的关系是一对一的关系，一个商品属于一种商品类型。网上购物系统的E-R图如图所示。"}, "md/Oracle数据类型.html": {"url": "md/Oracle数据类型.html", "title": "Oracle 数据类型", "keywords": "", "body": "Oracle数据类型官网文档要使用数据库来存储数据，首先就要知道这个数据库都能存储什么类型的数据。数据类型是在向数据表中存储数据前必须设定好的，就像如果要使用记事本查看文件内容，那么文件就要是文本的，不能有图片，否则图片是查看不了的，因为记事本中只能查看文本文件。在Oracle中提供的数据类型非常多，下面介绍常用的数据类型，并把数据类型分为字符型、数字型、日期类型和其他数据类型4类进行讲解。1.字符型字符型在Oracle中有varchar2、char、nchar、nvarchar2和long五种，它们在数据库中是以ASCII码的格式存储的。VARCHAR2(size[BYTE|CHAR])具有最大长度size字节或字符的可变长度字符串。您必须指定size的VARCHAR2。最小值size为1个字节或1个字符。最大尺寸为：32767字节或字符ifMAX_STRING_SIZE=EXTENDED如果是4000字节或字符MAX_STRING_SIZE=STANDARD有关初始化参数的更多信息，请参阅扩展数据类型MAX_STRING_SIZE。BYTE表示该列将具有字节长度语义。CHAR表示该列将具有字符语义。NVARCHAR2(size)具有最大长度size字符的可变长度Unicode字符串。您必须指定size的NVARCHAR2。字节数可以是最多两次size用于AL16UTF16编码和三次size用于UTF8编码。最大值size由国家字符集定义决定，上限为：32767字节如果MAX_STRING_SIZE=EXTENDED如果是4000字节MAX_STRING_SIZE=STANDARD有关初始化参数的更多信息，请参阅扩展数据类型MAX_STRING_SIZE。CHAR[(size[BYTE|CHAR])]长度size字节或字符的定长字符数据。最大值size为2000个字节或字符。默认值和最小值size为1个字节。BYTE并CHAR具有相同的语义VARCHAR2。NCHAR[(size)]长度字符的定长字符数据size。字节数可以是最多两次size用于AL16UTF16编码和三次size用于UTF8编码。最大值size由国家字符集定义决定，上限为2000字节。默认值和最小值size为1个字符。LONG可变长度的字符数据最多2千兆字节，或\\(2^31-1\\)字节。提供向后兼容性。2.数字型数字型在Oracle11g中常用的有number和float类型两种。NUMBER[(p[,s])]具有精度p和保留小数位数s。精度p范围为1到38。小数位数s范围为-84到127。精度和小数位数都是十进制数字。FLOAT[(p)]存储的精度是按二进制计算的。精度范围为二进制的1~1263.日期类型日期类型在Oracle11g中常用的有date和timestamp两种类型，可以用它们来存放日期和时间。DATE有效日期范围从公元前4712年1月1日到公元9999年12月31日。默认格式由NLS_DATE_FORMAT参数显式确定或由NLS_TERRITORY参数隐式确定。大小固定为7个字节。此数据类型包含日期时间字段YEAR，MONTH，DAY，HOUR，MINUTE，和SECOND。它没有小数秒或时区。TIMESTAMP[(fractional_seconds_precision)]日期的年，月和日值，以及小时，分钟和秒的时间值，其中fractional_seconds_precision是SECOND日期时间字段的小数部分中的位数。可接受的值为fractional_seconds_precision0到9.默认值为6.默认格式由NLS_TIMESTAMP_FORMAT参数显式确定或由NLS_TERRITORY参数隐式确定。大小为7或11个字节，具体取决于精度。此数据类型包含日期时间字段YEAR，MONTH，DAY，HOUR，MINUTE，和SECOND。它包含小数秒但没有时区。4.其他数据类型除了上面讲过的字符型、数字型、日期类型之外，在Oracle11g中还有存放大数据的数据类型以及存放二进制文件的数据类型。BLOB二进制大对象。最大大小为（4千兆字节-1）*（数据库块大小）"}, "md/exercise/index.html": {"url": "md/exercise/index.html", "title": "Oracle 练习汇总", "keywords": "", "body": "Oracle练习汇总1.表结构介绍奖金表：bonus序号列名类型说明1enameVARCHAR2(50)姓名2jobVARCHAR2(20)职位3salNUMBER薪水4commNUMBER奖金（佣金）部门表：dept序号列名类型说明1DEPTNONUMBER(2)部门编号，主键2DNAMEVARCHAR2(14)部门名称3LOCVARCHAR2(13)部门位置雇员表：emp序号列名类型说明1EMPNONUMBER(4)员工编号，EMP表主键2ENAMEVARCHAR2(50)员工姓名3JOBVARCHAR2(9)员工工作4MGRNUMBER(4)员工的领导编号，引用EMPNO5HIREDATEDATE入职日期6SALNUMBER(7,2)员工工资7COMMNUMBER(7,2)员工奖金8DEPTNONUMBER(2)员工部门编号，是表DEPT的外键。薪水等级表：salgrade序号列名类型说明1GRADENUMBER等级2LOSALNUMBER此等级下最低工资3HISALNUMBER此等级下最高工资学生表：STUDENT序号列名类型说明1IDNUMBER学生的编号2NAMEVARCHAR2(50)名字成绩表：ACHIEVEMENT序号列名类型说明1IDNUMBER学生的编号2NAMENUMBER成绩成绩表：userorgz序号列名类型说明1IDNUMBER编号2USERNAMEVARCHAR2(50)用户名3MOBILEPHONENUMBER手机号码2.创建数据SQLCreateData.sql"}, "md/exercise/001.html": {"url": "md/exercise/001.html", "title": "Oracle 练习 001", "keywords": "", "body": "Oracle练习0011.题目新建一个用户tom，密码设置为love2.实例点我看答案CREATEUSERtomIDENTIFIEDBYloveACCOUNTUNLOCK;"}, "md/exercise/002.html": {"url": "md/exercise/002.html", "title": "Oracle 练习 002", "keywords": "", "body": "Oracle练习0021.题目给用户tom授权登录，访问资源的权限2.实例点我看答案GRANTCONNECT,RESOURCETOtom;"}, "md/exercise/003.html": {"url": "md/exercise/003.html", "title": "Oracle 练习 003", "keywords": "", "body": "Oracle练习0031.题目锁定tom用户的账户，使其不能登录2.实例点我看答案ALTERUSERtomACCOUNTLOCK;"}, "md/exercise/004.html": {"url": "md/exercise/004.html", "title": "Oracle 练习 004", "keywords": "", "body": "Oracle练习0041.题目给tom用户解锁2.实例点我看答案ALTERUSERtomACCOUNTUNLOCK;"}, "md/exercise/005.html": {"url": "md/exercise/005.html", "title": "Oracle 练习 005", "keywords": "", "body": "Oracle练习0051.题目收回tom用户的登录、访问资源的权限2.实例点我看答案REVOKECONNECT,RESOURCEFROMtom;"}, "md/exercise/006.html": {"url": "md/exercise/006.html", "title": "Oracle 练习 006", "keywords": "", "body": "Oracle练习0061.题目删除用户tom2.实例点我看答案DROPUSERtom;"}, "md/exercise/007.html": {"url": "md/exercise/007.html", "title": "Oracle 练习 007", "keywords": "", "body": "Oracle练习0071.题目创建表class_info字段名类型长度可选值c_id字符串20主键c_type字符串6UI、测试、开发c_position字符串20非空start_time日期c_status字符串6在读、毕业2.实例点我看答案CREATETABLEclass_info(c_idVARCHAR2(20)PRIMARYKEY,c_typeVARCHAR2(10)CHECK(c_typein(&#39;UI&#39;,&#39;测试&#39;,&#39;开发&#39;)),c_positionVARCHAR2(20)NOTNULL,start_timeDATE,c_statusVARCHAR2(10)CHECK(c_statusin(&#39;在读&#39;,&#39;毕业&#39;)));"}, "md/exercise/008.html": {"url": "md/exercise/008.html", "title": "Oracle 练习 008", "keywords": "", "body": "Oracle练习0081.题目把表class_info改成class_info22.实例点我看答案renameclass_infotoclass_info2;"}, "md/exercise/009.html": {"url": "md/exercise/009.html", "title": "Oracle 练习 009", "keywords": "", "body": "Oracle练习0091.题目显示薪水大于2000，且工作类别是经理的雇员信息2.实例点我看答案select*fromempewheree.sal&gt;2000ande.job=&#39;经理&#39;;"}, "md/exercise/010.html": {"url": "md/exercise/010.html", "title": "Oracle 练习 010", "keywords": "", "body": "Oracle练习0101.题目显示年薪大于30000，工作类别不是经理的雇员信息2.实例点我看答案select*fromempewheree.sal*12&gt;30000ande.job!=&#39;经理&#39;;"}, "md/exercise/011.html": {"url": "md/exercise/011.html", "title": "Oracle 练习 011", "keywords": "", "body": "Oracle练习0111.题目显示薪水在1500到3000之间，工作类别以“M”开头的雇员信息2.实例点我看答案select*fromempewheree.salbetween1500and3000ande.joblike&#39;M%&#39;;"}, "md/exercise/012.html": {"url": "md/exercise/012.html", "title": "Oracle 练习 012", "keywords": "", "body": "Oracle练习0121.题目显示佣金为空并且部门号为20或30的雇员信息2.实例点我看答案select*fromempewheree.commisnulland(e.deptno=20ore.deptno=30);select*fromempewheree.commisnullande.deptnoin(20,30);"}, "md/exercise/013.html": {"url": "md/exercise/013.html", "title": "Oracle 练习 013", "keywords": "", "body": "Oracle练习0131.题目显示佣金不为空或者部门号为20的雇员信息，要求按照薪水降序排列2.实例点我看答案select*fromempewheree.commisnotnullore.deptno=20orderbye.saldesc;"}, "md/exercise/014.html": {"url": "md/exercise/014.html", "title": "Oracle 练习 014", "keywords": "", "body": "Oracle练习0141.题目显示年薪大于30000工作类别不是经理，且部门号不是10和40的雇员信息，要求按照雇员姓名进行排序2.实例点我看答案select*fromempewheree.sal*12&gt;30000ande.job!=&#39;经理&#39;ande.deptnonotin(10,40)orderbye.ename;"}, "md/exercise/015.html": {"url": "md/exercise/015.html", "title": "Oracle 练习 015", "keywords": "", "body": "Oracle练习0151.题目选择在部门30中员工的所有信息2.实例点我看答案select*fromempewheree.deptno=30;"}, "md/exercise/016.html": {"url": "md/exercise/016.html", "title": "Oracle 练习 016", "keywords": "", "body": "Oracle练习0161.题目列出职位为经理的员工的编号，姓名2.实例点我看答案selecte.empno,e.enamefromempewheree.job=&#39;经理&#39;;"}, "md/exercise/017.html": {"url": "md/exercise/017.html", "title": "Oracle 练习 017", "keywords": "", "body": "Oracle练习0171.题目找出部门10中的经理和部门20中的普通员工2.实例点我看答案select*fromempewhere(e.deptno=10ande.job=&#39;经理&#39;)or(e.deptno=20ande.job=&#39;普通员工&#39;);"}, "md/exercise/018.html": {"url": "md/exercise/018.html", "title": "Oracle 练习 018", "keywords": "", "body": "Oracle练习0181.题目找出部门10中既不是经理也不是普通员工，而且工资大于等于2000的员工2.实例点我看答案select*fromempewheree.deptno=10ande.jobnotin(&#39;经理&#39;,&#39;普通员工&#39;)ande.sal&gt;=2000;"}, "md/exercise/019.html": {"url": "md/exercise/019.html", "title": "Oracle 练习 019", "keywords": "", "body": "Oracle练习0191.题目找出没有奖金或者奖金低于500的员工2.实例点我看答案select*fromempewheree.commisnullore.comm&lt;500;"}, "md/exercise/020.html": {"url": "md/exercise/020.html", "title": "Oracle 练习 020", "keywords": "", "body": "Oracle练习0201.题目显示雇员姓名，根据其服务年限，将最老的雇员排在最前面2.实例点我看答案selecte.enamefromempeorderbye.hiredateasc;"}, "md/exercise/021.html": {"url": "md/exercise/021.html", "title": "Oracle 练习 021", "keywords": "", "body": "Oracle练习0211.题目找出有奖金的员工的不同工作2.实例点我看答案selectdistincte.jobfromempewheree.commisnotnull;"}, "md/exercise/022.html": {"url": "md/exercise/022.html", "title": "Oracle 练习 022", "keywords": "", "body": "Oracle练习0221.题目找出姓名中不带R这个字母的员工2.实例点我看答案select*fromempewheree.enamenotlike&#39;%R%&#39;;"}, "md/exercise/023.html": {"url": "md/exercise/023.html", "title": "Oracle 练习 023", "keywords": "", "body": "Oracle练习0231.题目显示所有员工，按工作降序排列，若相同，则按工资升序排序2.实例点我看答案select*fromempeorderbye.jobdesc,e.salasc;"}, "md/exercise/024.html": {"url": "md/exercise/024.html", "title": "Oracle 练习 024", "keywords": "", "body": "Oracle练习0241.题目查找出不属于任何部门的员工2.实例点我看答案select*fromempewheree.deptnoisnull;"}, "md/exercise/025.html": {"url": "md/exercise/025.html", "title": "Oracle 练习 025", "keywords": "", "body": "Oracle练习0251.题目创建一查询，显示与BLAKE在同一部门工作的雇员的姓名和受雇日期、部门编号，但是BLAKE不包含在内。2.实例点我看答案selecte.ename,e.hiredate,e.deptnofromempejoinempe1one.deptno=e1.deptnoande1.ename=&#39;BLAKE&#39;wheree.ename!=&#39;BLAKE&#39;;"}, "md/exercise/026.html": {"url": "md/exercise/026.html", "title": "Oracle 练习 026", "keywords": "", "body": "Oracle练习0261.题目显示位置在达拉斯的部门内的雇员姓名、工作。2.实例点我看答案selecte.ename,e.jobfromempejoindeptdone.deptno=d.deptnoandd.loc=&#39;达拉斯&#39;;"}, "md/exercise/027.html": {"url": "md/exercise/027.html", "title": "Oracle 练习 027", "keywords": "", "body": "Oracle练习0271.题目显示被KING直接管理的雇员的姓名以及薪水。2.实例点我看答案selecte.ename,e.salfromempejoinempe1one.mgr=e1.empnoande1.ename=&#39;KING&#39;;"}, "md/exercise/028.html": {"url": "md/exercise/028.html", "title": "Oracle 练习 028", "keywords": "", "body": "Oracle练习0281.题目创建一查询，显示能获得与SCOTT一样薪水的其他雇员的姓名、受雇日期以及薪水。2.实例点我看答案selecte.ename,e.hiredate,e.salfromempejoinempe1one.sal=e1.salande1.ename=&#39;SCOTT&#39;wheree.ename!=&#39;SCOTT&#39;;"}, "md/exercise/029.html": {"url": "md/exercise/029.html", "title": "Oracle 练习 029", "keywords": "", "body": "Oracle练习0291.题目查找出工资等级不为4级的员工的员工名字，部门名字，部门位置。2.实例点我看答案selecte.ename,d.dname,d.loc,s.gradefromempejoinsalgradesone.salbetweens.losalands.hisalands.grade!=4leftjoindeptdone.deptno=d.deptno;"}, "md/exercise/030.html": {"url": "md/exercise/030.html", "title": "Oracle 练习 030", "keywords": "", "body": "Oracle练习0301.题目找出每个月倒数第三天受雇的员工（如：2009-5-29）2.实例点我看答案select*fromempewheree.hiredate=last_day(e.hiredate)-2;"}, "md/exercise/031.html": {"url": "md/exercise/031.html", "title": "Oracle 练习 031", "keywords": "", "body": "Oracle练习0311.题目找出25年前雇的员工2.实例点我看答案select*fromempewhere(sysdate-e.hiredate)/12/30&gt;25;select*fromempewheremonths_between(sysdate,e.hiredate)/12&gt;25;select*fromempewhereadd_months(sysdate,-25*12)&gt;=e.hiredate;"}, "md/exercise/032.html": {"url": "md/exercise/032.html", "title": "Oracle 练习 032", "keywords": "", "body": "Oracle练习0321.题目所有员工名字前加上Dear,并且名字首字母大写2.实例点我看答案selecte.ename,&#39;Dear&#39;||initcap(e.ename)fromempe;selecte.ename,concat(&#39;Dear&#39;,initcap(e.ename))fromempe;"}, "md/exercise/033.html": {"url": "md/exercise/033.html", "title": "Oracle 练习 033", "keywords": "", "body": "Oracle练习0331.题目找出姓名为5个字符的员工2.实例点我看答案select*fromempewherelength(e.ename)=5;"}, "md/exercise/034.html": {"url": "md/exercise/034.html", "title": "Oracle 练习 034", "keywords": "", "body": "Oracle练习0341.题目显示所有员工的姓名的第一个字2.实例点我看答案selecte.ename,substr(e.ename,1,1)fromempe;"}, "md/exercise/035.html": {"url": "md/exercise/035.html", "title": "Oracle 练习 035", "keywords": "", "body": "Oracle练习0351.题目找到2月份受雇的员工2.实例点我看答案select*fromempewhereto_char(e.hiredate,&#39;mm&#39;)=2;"}, "md/exercise/036.html": {"url": "md/exercise/036.html", "title": "Oracle 练习 036", "keywords": "", "body": "Oracle练习0361.题目对薪水是2000元以下的员工进行查询，如果没有发奖金，每人奖金100元。2.实例点我看答案selectename,job,sal,nvl(comm,100)fromempwheresal&lt;2000;"}, "md/exercise/037.html": {"url": "md/exercise/037.html", "title": "Oracle 练习 037", "keywords": "", "body": "Oracle练习0371.题目对EMP表中薪水为2000元以下的员工进行查询，如果没有奖金，则显示奖金为200元，如果有奖金，则在原来的奖金基础上加100元。2.实例点我看答案selectename,job,sal,nvl2(comm,comm+100,200)&quot;comm&quot;fromempwheresal&lt;2000;"}, "md/exercise/038.html": {"url": "md/exercise/038.html", "title": "Oracle 练习 038", "keywords": "", "body": "Oracle练习0381.题目列出至少有一个员工的所有部门2.实例点我看答案select*fromdeptdwhered.deptnoin(selecte.deptnofromempegroupbye.deptnohavingcount(e.ename)&gt;0);"}, "md/exercise/039.html": {"url": "md/exercise/039.html", "title": "Oracle 练习 039", "keywords": "", "body": "Oracle练习0391.题目查询出KING所在部门的工作年限最大的员工名字2.实例点我看答案selecte.ename,e.hiredate,e.deptnofromempewheree.hiredate=(selectmin(hiredate)fromempwheredeptnoin(selectdeptnofromempwhereename=&#39;KING&#39;))ande.deptno=(selectdeptnofromempwhereename=&#39;KING&#39;);"}, "md/exercise/040.html": {"url": "md/exercise/040.html", "title": "Oracle 练习 040", "keywords": "", "body": "Oracle练习0401.题目查询出KING所在部门的部门号、部门名称、部门人数2.实例点我看答案selectd.deptno,d.dname,t.人数fromdeptd,(selectcount(*)人数,deptnofromempwheredeptnoin(selectdeptnofromempwhereename=&#39;KING&#39;)groupbydeptno)twhered.deptno=t.deptno;selectd.dname,d.deptno,t2.*fromdeptd,(selectt.人数,t.deptnofrom(selectcount(*)人数,deptnofromempgroupbydeptno)twheret.deptnoin(selectdeptnofromempwhereename=&#39;KING&#39;))t2whered.deptno=t2.deptno;selecte.deptno部门号,d.dname部门名称,(selectcount(*)from(selectdeptnofromempwheredeptnoin(selectdeptnofromempwhereename=&#39;KING&#39;)))人数fromempe,deptdwheree.deptno=d.deptnoande.ename=&#39;KING&#39;;"}, "md/exercise/041.html": {"url": "md/exercise/041.html", "title": "Oracle 练习 041", "keywords": "", "body": "Oracle练习0411.题目算出部门30中得到最多奖金的员工姓名2.实例点我看答案selectename,comm,deptnofromempwherecomm=(selectmax(comm)fromempwheredeptno=30)anddeptno=30;"}, "md/exercise/042.html": {"url": "md/exercise/042.html", "title": "Oracle 练习 042", "keywords": "", "body": "Oracle练习0421.题目统计各部门下平均工资大于500的部门2.实例点我看答案selectdeptno,avg(sal)fromempgroupbydeptnohavingavg(sal)&gt;500;"}, "md/exercise/043.html": {"url": "md/exercise/043.html", "title": "Oracle 练习 043", "keywords": "", "body": "Oracle练习0431.题目按部门统计员工数，查出员工数最多的部门的第二名到第五名（列出部门名字，部门位置）2.实例点我看答案selectd.dname,d.loc,d.deptnofromdeptd,(selectrownumno,deptnofrom(selectcount(*)人数,deptnofromempgroupbydeptnoorderby人数desc))ewheree.nobetween2and5ande.deptno=d.deptno;"}, "md/exercise/044.html": {"url": "md/exercise/044.html", "title": "Oracle 练习 044", "keywords": "", "body": "Oracle练习0441.题目查找出部门10和部门20中，工资最高第3名到第5名的员工的员工名字，部门名字，部门位置2.实例点我看答案selectd.dname,d.loc,e.enamefromdeptd,(selectename,sal,deptno,rownumnofrom(select*fromempwheredeptnoin(10,20)orderbysaldesc))ewhered.deptno=e.deptnoande.nobetween3and5;"}, "md/exercise/045.html": {"url": "md/exercise/045.html", "title": "Oracle 练习 045", "keywords": "", "body": "Oracle练习0451.题目从EMP表中查询如果其工资大于3500，则显示高工资。工资大于2000小于等于3500，则显示中等工资。工资小于等于2000的则显示低等工资。2.实例点我看答案selecte.ename,e.sal,(casewhene.sal&gt;3500then&#39;高工资&#39;whene.sal&gt;2000then&#39;中等工资&#39;else&#39;低等工资&#39;end)工资等级fromempe;"}, "md/exercise/046.html": {"url": "md/exercise/046.html", "title": "Oracle 练习 046", "keywords": "", "body": "Oracle练习0461.题目已知有如下数据表：A月份部门业绩一月份A10一月份B10一月份C5二月份A8二月份B9三月份A8写出相应SQL，得到以下结果集：部门一月份二月份三月份A1088B1090C5002.实例点我看答案select部门,max(case月份when&#39;一月份&#39;then业绩else0end)一月份,max(case月份when&#39;二月份&#39;then业绩else0end)二月份,max(case月份when&#39;三月份&#39;then业绩else0end)三月份fromAgroupby部门;"}, "md/exercise/047.html": {"url": "md/exercise/047.html", "title": "Oracle 练习 047", "keywords": "", "body": "Oracle练习0471.题目从EMP表中查询统计各部门工资低于（包含）2000的人数与高于2000的人数2.实例点我看答案selecte.deptno,count(casewhene.sal&lt;=2000thene.salelsenullend)&quot;&lt;=2000&quot;,count(casewhene.sal&gt;2000thene.salelsenullend)&quot;&gt;2000&quot;fromempegroupbye.deptno;"}, "md/exercise/048.html": {"url": "md/exercise/048.html", "title": "Oracle 练习 048", "keywords": "", "body": "Oracle练习0481.题目从Student表和Achievement表中查询成绩&gt;85分的学生的姓名2.实例点我看答案selects.id,s.name,a.markfromstudents,achievementawheres.id=a.idanda.mark&gt;85;"}, "md/exercise/049.html": {"url": "md/exercise/049.html", "title": "Oracle 练习 049", "keywords": "", "body": "Oracle练习0491.题目从Student表和Achievement表中查询成绩&gt;=90分的人数2.实例点我看答案selectcount(*)fromachievementawherea.mark&gt;=90;"}, "md/exercise/050.html": {"url": "md/exercise/050.html", "title": "Oracle 练习 050", "keywords": "", "body": "Oracle练习0501.题目操作Student表和Achievement表Robert此次考试考了80分，但是成绩没能录入表中，请将其成绩添加进去2.实例点我看答案insertintoachievement(id,mark)values((selectidfromstudentwherename=&#39;Robert&#39;),80);"}, "md/exercise/051.html": {"url": "md/exercise/051.html", "title": "Oracle 练习 051", "keywords": "", "body": "Oracle练习0511.题目操作Student表和Achievement表将Rose的成绩修改为872.实例点我看答案updateachievementaseta.mark=87wherea.id=(selects.idfromstudentswherename=&#39;Rose&#39;);"}, "md/exercise/052.html": {"url": "md/exercise/052.html", "title": "Oracle 练习 052", "keywords": "", "body": "Oracle练习0521.题目操作Student表和Achievement表删除Betty的记录2.实例点我看答案deletefromachievementwhereid=(selectidfromstudentwherename=&#39;Betty&#39;);deletefromstudentwherename=&#39;Betty&#39;;"}, "md/exercise/053.html": {"url": "md/exercise/053.html", "title": "Oracle 练习 053", "keywords": "", "body": "Oracle练习0531.题目查询userorgz表，统计出有手机号码重复的手机号码以及重复个数，并根据重复数量降序排序且手机重复个数必须大于12.实例点我看答案selectmobilephone,count(*)fromuserorgzgroupbymobilephonehavingcount(*)&gt;1orderbycount(*)desc;"}, "md/exercise/选择题.html": {"url": "md/exercise/选择题.html", "title": "Oracle 选择题", "keywords": "", "body": "Oracle选择题1.题目SQL指的是？A.StrongQuestionLanguageB.StructuredQuestionLanguageC.StructuredQueryLanguage哪个SQL语句用于从数据库中提取数据？A.SELECTB.OPENC.GETD.EXTRACT哪条SQL语句用于更新数据库中的数据？A.UPDATEB.SAVEC.SAVEASD.MODIFY哪条SQL语句用于删除数据库中的数据？A.REMOVEB.DELETEC.COLLAPSE哪条SQL语句用于在数据库中插入新数据？A.ADDNEWB.INSERTNEWC.INSERTINTOD.ADDRECORD使用SQL，如何从名为“Persons”的表中选择名为“FirstName”的列？A.EXTRACTFirstNameFROMPersonsB.SELECTFirstNameFROMPersonsC.SELECTPersons.FirstName使用SQL，如何从名为“Persons”的表中选择所有列？A.SELECTPersonsB.SELECT*.PersonsC.SELECT[all]FROMPersonsD.SELECT*FROMPersons使用SQL，如何从名为“Persons”的表中选择“FirstName”列的值为“Peter”的所有记录？A.SELECT[all]FROMPersonsWHEREFirstName='Peter'B.SELECT[all]FROMPersonsWHEREFirstNameLIKE'Peter'C.SELECT*FROMPersonsWHEREFirstName='Peter'D.SELECT*FROMPersonsWHEREFirstName&lt;&gt;'Peter'使用SQL，如何从名为“Persons”的表中选择所有记录，其中“FirstName”列的值以“a”开头？A.SELECT*FROMPersonsWHEREFirstNameLIKE'％a'B.SELECT*FROMPersonsWHEREFirstName='％a％'C.SELECT*FROMPersonsWHEREFirstName='a'D.SELECT*FROMPersonsWHEREFirstNameLIKE'a％'如果列出的任何条件为真，OR运算符将显示一条记录。如果列出的所有条件都为真，AND运算符将显示一条记录A.TrueB.False使用SQL，如何在表Persons中选择FirstName等于Peter而LastName等于Jackson的所有记录？A.SELECTFirstName='Peter',LastName='Jackson'FROMPersonsB.SELECT*FROMPersonsWHEREFirstName='Peter'ANDLast-Name='Jackson'C.SELECT*FROMPersonsWHEREFirstName&lt;&gt;'Peter'ANDLast-Name&lt;&gt;'Jackson'使用SQL，如何按字母顺序选取Persons表中LastName介于（包含）Hansen和Pettersen的所有记录？A.SELECTLastName&gt;'Hansen'ANDLastName&lt;'Pettersen'FROMPersonsB.SELECT*FROMPersonsWHERELastNameBETWEEN'Hansen'AND'Pet-tersen'C.SELECT*FROMPersonsWHERELastName&gt;'Hansen'ANDLast-Name&lt;'Pettersen'哪条SQL语句可返回唯一不同的值？A.SELECTDISTINCTB.SELECTDIFFERENT哪个SQL关键词用于对结果集进行排序？A.SORTB.ORDERC.ORDERBYD.SORTBY使用SQL，如何根据\"FirstName\"列降序地从\"Persons\"表返回所有记录？A.SELECT*FROMPersonsSORTBY'FirstName'DESCB.SELECT*FROMPersonsSORT'FirstName'DESCC.SELECT*FROMPersonsORDERFirstNameDESCD.SELECT*FROMPersonsORDERBYFirstNameDESC使用SQL，如何向\"Persons\"表插入新的记录？A.INSERT('Jimmy','Jackson')INTOPersonsB.INSERTVALUES('Jimmy','Jackson')INTOPersonsC.INSERTINTOPersonsVALUES('Jimmy','Jackson')使用SQL，如何向\"Persons\"表中的\"LastName\"列插入\"Olsen\"？A.INSERTINTOPersons(LastName)VALUES('Olsen')B.INSERT('Olsen')INTOPersons(LastName)C.INSERTINTOPersons('Olsen')INTOLastName使用SQL，如何把\"Persons\"表中\"LastName\"列的\"Hansen\"改为\"Nilsen\"？A.UPDATEPersonsSETLastName='Hansen'INTOLastName='Nilsen'B.MODIFYPersonsSETLastName='Hansen'INTOLastName='NilsenC.UPDATEPersonsSETLastName='Nilsen'WHERELastName='Hansen'D.MODIFYPersonsSETLastName='Nilsen'WHERELastName='Hansen'使用SQL，如何在\"Persons\"表中删除\"FirstName\"等于\"Peter\"的纪录？A.DELETEFirstName='Peter'FROMPersonsB.DELETEROWFirstName='Peter'FROMPersonsC.DELETEFROMPersonsWHEREFirstName='Peter'使用SQL，如何返回\"Persons\"表中记录的数目？A.SELECTNO(*)FROMPersonsB.SELECTCOUNT(*)FROMPersonsC.SELECTLEN(*)FROMPersonsD.SELECTCOLUMNS(*)FROMPersons哪个操作符用于选择范围内的值？A.BETWEENB.RANGEC.WITHINNOTNULL约束强制约束列不接受空值。A.FalseB.True哪个操作符用于在列中模糊搜索？A.GETB.LIKEC.FROM哪个SQL语句用于在数据库中创建表？A.CREATEDATABASETABLEB.CREATEDBC.CREATEDATABASETABD.CREATETABLE2.答案点我看答案12345678910CAABCBDCDA11121314151617181920BBACDCACCB21222324ABBD"}}